name: Draft

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  get-version:
    name: Get release version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get release info
        run: |
          echo "git-version=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
          echo "py-version=$(grep '__version__' $(find src -name '__init__.py') | awk -F '"' '{print $2}')" >> $GITHUB_ENV
          echo "md-version=$(grep -m 1 '##' CHANGELOG.md | awk -F ' ' '{print $2}')" >> $GITHUB_ENV
          echo "git-date=$(git show -s --format=%cs $GITHUB_REF_NAME)" >> $GITHUB_ENV
          echo "md-date=$(grep -m 1 '##' CHANGELOG.md | awk -F ' ' '{gsub("[()]", "", $3); print $3}')" >> $GITHUB_ENV
      - name: Verify version match
        run: |
          ${{ env.git-version == env.py-version }} || exit 1
          ${{ env.git-version == env.md-version }} || exit 1
      - name: Verify date match
        run: |
          ${{ env.git-date == env.md-date }} || exit 1
      - name: Get release version
        id: version
        run: echo ::set-output name=version::${GITHUB_REF_NAME#v}
  create-draft:
    name: Create draft release
    runs-on: ubuntu-latest
    needs: get-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Prepare release changes
        env:
          VERSION: ${{ needs.get-version.outputs.version }}
          SOURCE: CHANGELOG.md
          OUTPUT: ${{ github.ref_name }}-CHANGES.txt
        run: |
          cat $SOURCE | sed -n "/^## $VERSION/,/^##/p" | sed '1d;$d;/^$/d' > $OUTPUT
      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ github.ref_name }}-CHANGES.txt
          draft: true
          name: ${{ needs.get-version.outputs.version }}
          token: ${{ secrets.PERSONAL_ACTION_TOKEN }}
